Flexible Data Formats

Columns:
event_id
, event_time
, user_id
, platform
, item_id
, referrer

Exercise 1:
Goal: Write a query to format the view_item event into a table with the appropriate columns

Starter Code:
SELECT *
FROM dsv1069.events
WHERE event_name = 'view_item'

Solution: 
SELECT 
event_id
, event_time
, user_id
, platform
, (CASE WHEN parameter_name = 'item_id'
        THEN CAST(parameter_value AS INT)
        ELSE NULL END) AS item_id
, (CASE WHEN parameter_name = 'referrer'
        THEN parameter_value
        ELSE NULL 
      END) AS referrer
FROM dsv1069.events

Exercise 2:
Goal: Write a query to format the view_item event into a table with the appropriate columns
(This replicates what we had in the slides, but it is missing a column)

Starter Code:
SELECT
event_id
, event_time,
, user_id
, platform
, (CASE WHEN parameter_name = 'item_id'
      THEN CAST (parameter_value AS INT)
      ELSE NULL
      END) AS item_id
FROM dsv1069.events
WHERE event_name = 'view_item'
ORDER BY event_id

Solution:
SELECT
event_id
, event_time
, user_id
, platform
, (CASE WHEN parameter_name = 'item_id'
      THEN CAST(parameter_value AS INT)
      ELSE NULL
      END) AS item_id
, (CASE WHEN parameter_name = 'view_user_profile'
      THEN CAST(parameter_value AS INT)
      ELSE NULL
      END) AS view_user_profile
, (CASE WHEN parameter_name = 'test_assignment'
      THEN CAST(parameter_value AS INT)
      ELSE NULL
      END) AS test_assignment
FROM dsv1069.events
WHERE event_name = 'view_item'


Exercise 3:
Goal: Use the result from the previous exercise, but make sure

Starter Code:
SELECT
  , event_id
  , event_time
  , user_id
  , platform
, (CASE WHEN parameter_name = 'item_id'
      THEN CAST (parameter_value AS INT)
      ELSE NULL
      END) AS item_id
(CASE WHEN parameter_name = 'referrer'
      THEN CAST (parameter_value AS INT)
      ELSE NULL
      END) AS referrer
FROM dsv1069.events
WHERE event_name = 'view_item'
ORDER BY event_id
